# Generated by Django 2.2.17 on 2021-05-10 17:29

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("uploader", "0009_auto_20210112_1719"),
    ]

    operations = [
        migrations.CreateModel(
            name="Request",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "request_arguments_template",
                    models.TextField(
                        blank=True,
                        help_text='Jinja2 template that must render valid JSON. This JSON will then be converted to a python dict which will be used to define the arguments of the <a href="https://2.python-requests.org/en/master/api/#requests.Session.request" target="_blank">Session.request</a> method. Note that both the <b>method</b> and <b>url</b> arguments are required. To build the template you have access to the uploaded records, grouped by analysis id (<b>achilles_results</b>) (ex: {1: [{"stratum_1":10, ...}, {{"stratum_1":11, ...}}], ...}), the django model object of the target Data Source (<b>data_source</b>) and the responses to the previous requests of the same group (<b>responses</b>). An example of a valid template to send the number of patients of a datasource: {"url": "http://server.com" , "method": "post", "data": {"patient_count": "{{ achilles_results.0.0.count_value }}"}}',
                    ),
                ),
                (
                    "success_condition_template",
                    models.TextField(
                        blank=True,
                        help_text='A Jinja2 template that must render a boolean expression that indicates that this request was successful and the next requests of the associated request group can be performed. On this template, you have access to the returned <a href="https://docs.python-requests.org/en/master/api/#requests.Response" target="_blank">requests.Response</a> object (<b>response</b>). Ex: {{ response.status_code }} == 200',
                        null=True,
                    ),
                ),
                ("order", models.IntegerField()),
            ],
            options={
                "ordering": ("order",),
            },
        ),
        migrations.CreateModel(
            name="RequestsGroup",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "active",
                    models.BooleanField(
                        default=True,
                        help_text="Allows to deactivate this group of requests from being processed without having to delete associated records",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RequestsGroupLog",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("success_count", models.IntegerField(default=0)),
                ("time", models.DateTimeField(auto_now_add=True)),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="updates.RequestsGroup",
                    ),
                ),
                (
                    "trigger_upload",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="uploader.UploadHistory",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RequestLog",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("request_arguments_template_render", models.TextField(null=True)),
                ("success_condition_template_render", models.TextField(null=True)),
                ("success", models.BooleanField(default=True)),
                ("exception", models.TextField(null=True)),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="requests",
                        to="updates.RequestsGroupLog",
                    ),
                ),
                (
                    "request",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="updates.Request",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="request",
            name="group",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="requests",
                to="updates.RequestsGroup",
            ),
        ),
    ]
